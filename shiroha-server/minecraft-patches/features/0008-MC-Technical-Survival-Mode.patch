From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: mrhua269 <mrhua269@gmail.com>
Date: Sat, 1 Nov 2025 12:50:27 +0800
Subject: [PATCH] MC Technical Survival Mode

A part of Leaves(https://github.com/LeavesMC/Leaves/blob/93311671d27c3541d6237be20c78d9ea665a995f/leaves-server/minecraft-patches/features/0033-MC-Technical-Survival-Mode.patch and https://github.com/LeavesMC/Leaves/blob/93311671d27c3541d6237be20c78d9ea665a995f/leaves-server/paper-patches/features/0007-MC-Technical-Survival-Mode.patch)

Original license: https://github.com/LeavesMC/Leaves/blob/93311671d27c3541d6237be20c78d9ea665a995f/LICENSE.md

diff --git a/net/minecraft/server/level/ServerPlayer.java b/net/minecraft/server/level/ServerPlayer.java
index 73ab41d56a0d8f8071f9b2a23c74d153ae5a23a9..c640cd5329bf95c360c0a8c5f63d5915ec578738 100644
--- a/net/minecraft/server/level/ServerPlayer.java
+++ b/net/minecraft/server/level/ServerPlayer.java
@@ -2183,7 +2183,7 @@ public class ServerPlayer extends Player implements ca.spottedleaf.moonrise.patc
     public boolean isInvulnerableTo(ServerLevel level, DamageSource damageSource) {
         return (super.isInvulnerableTo(level, damageSource) // Paper - disable player cramming;
             || this.isChangingDimension() && !damageSource.is(DamageTypes.ENDER_PEARL)
-            || !this.hasClientLoaded()) || (!this.level().paperConfig().collisions.allowPlayerCrammingDamage && damageSource.is(DamageTypes.CRAMMING)); // Paper - disable player cramming;
+            || !this.hasClientLoaded()) || (!i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled && !this.level().paperConfig().collisions.allowPlayerCrammingDamage && damageSource.is(DamageTypes.CRAMMING)); // Paper - disable player cramming; // Leaves - mc technical survival mode
     }
 
     @Override
diff --git a/net/minecraft/world/entity/ai/behavior/AcquirePoi.java b/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
index 57befff1f0675e889304a6258258384d8de02c87..ae78a10f1305c05740d12f273b26ae4ad14e4266 100644
--- a/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
+++ b/net/minecraft/world/entity/ai/behavior/AcquirePoi.java
@@ -24,6 +24,7 @@ import net.minecraft.world.entity.ai.village.poi.PoiManager;
 import net.minecraft.world.entity.ai.village.poi.PoiType;
 import net.minecraft.world.level.pathfinder.Path;
 import org.apache.commons.lang3.mutable.MutableLong;
+import i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig;// Shiroha - Imports
 
 public class AcquirePoi {
     public static final int SCAN_RANGE = 48;
@@ -70,7 +71,7 @@ public class AcquirePoi {
                             return false;
                         } else {
                             mutableLong.setValue(time + 20L + level.getRandom().nextInt(20));
-                            if (level.paperConfig().entities.behavior.stuckEntityPoiRetryDelay.enabled() && mob.getNavigation().isStuck()) mutableLong.add(level.paperConfig().entities.behavior.stuckEntityPoiRetryDelay.intValue()); // Paper - Next stuck check delay config
+                            if (!MCTechnicalSurvivalModeConfig.enabled && level.paperConfig().entities.behavior.stuckEntityPoiRetryDelay.enabled() && mob.getNavigation().isStuck()) mutableLong.add(level.paperConfig().entities.behavior.stuckEntityPoiRetryDelay.intValue()); // Paper - Next stuck check delay config // Leaves - mc technical survival mode
                             PoiManager poiManager = level.getPoiManager();
                             map.long2ObjectEntrySet().removeIf(entry -> !entry.getValue().isStillValid(time));
                             Predicate<BlockPos> predicate1 = pos -> {
diff --git a/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java b/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
index 5a6e10db234d7e5e76420cea1a0ba0e746f1f496..49ae2ae4f6f4514946742c0f957a81dfc4cf5983 100644
--- a/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
+++ b/net/minecraft/world/entity/boss/enderdragon/EndCrystal.java
@@ -65,7 +65,7 @@ public class EndCrystal extends Entity {
         }
 
         // Paper start - Fix invulnerable end crystals
-        if (this.level().paperConfig().unsupportedSettings.fixInvulnerableEndCrystalExploit && this.generatedByDragonFight && this.isInvulnerable()) {
+        if (!i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled && this.level().paperConfig().unsupportedSettings.fixInvulnerableEndCrystalExploit && this.generatedByDragonFight && this.isInvulnerable()) { // Leaves - mc technical survival mode
             if (!java.util.Objects.equals(((ServerLevel) this.level()).uuid, this.originWorld)
                 || ((ServerLevel) this.level()).getDragonFight() == null
                 || ((ServerLevel) this.level()).getDragonFight().respawnStage == null
diff --git a/net/minecraft/world/entity/item/PrimedTnt.java b/net/minecraft/world/entity/item/PrimedTnt.java
index 732672aa7d915217eb4af44179b2f2ab1e796cca..dcf98824dac57acf4502fa4d6d7510de6fe42641 100644
--- a/net/minecraft/world/entity/item/PrimedTnt.java
+++ b/net/minecraft/world/entity/item/PrimedTnt.java
@@ -100,7 +100,7 @@ public class PrimedTnt extends Entity implements TraceableEntity {
 
     @Override
     public void tick() {
-        if (this.level().spigotConfig.maxTntTicksPerTick > 0 && ++this.level().getCurrentWorldData().currentPrimedTnt > this.level().spigotConfig.maxTntTicksPerTick) { return; } // Spigot // Folia - region threading
+        if (this.level().spigotConfig.maxTntTicksPerTick > 0 && ++this.level().getCurrentWorldData().currentPrimedTnt > (i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled ? 2000 : this.level().spigotConfig.maxTntTicksPerTick)) { return; } // Spigot // Folia - region threading // Leaves - mc technical survival mode
         //this.handlePortal(); // Folia - region threading
         this.applyGravity();
         this.move(MoverType.SELF, this.getDeltaMovement());
diff --git a/net/minecraft/world/level/NaturalSpawner.java b/net/minecraft/world/level/NaturalSpawner.java
index 81f4707cf1a7cbdfcfc519cfbe1052cde77aa755..4efe22b77b6b1a02d4fd24407d99a6f8113b8bd1 100644
--- a/net/minecraft/world/level/NaturalSpawner.java
+++ b/net/minecraft/world/level/NaturalSpawner.java
@@ -82,7 +82,7 @@ public final class NaturalSpawner {
                 MobCategory category = entity.getType().getCategory();
                 if (category != MobCategory.MISC) {
                     // Paper start - Only count natural spawns
-                    if (!entity.level().paperConfig().entities.spawning.countAllMobsForSpawning &&
+                    if (!i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled && !entity.level().paperConfig().entities.spawning.countAllMobsForSpawning && // Leaves - mc technical survival mode
                         !(entity.spawnReason == org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.NATURAL ||
                             entity.spawnReason == org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CHUNK_GEN)) {
                         continue;
diff --git a/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java b/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
index 91f7ee163107d846e7f6a5783be6eff96e783886..d223ef1925c98d8584c85d03889f3d2b2e4d282e 100644
--- a/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
@@ -327,7 +327,7 @@ public class BeehiveBlockEntity extends BlockEntity {
                     iterator.remove();
                 }
                 // Paper start - Fix bees aging inside; use exitTickCounter to keep actual bee life
-                else if (level.paperConfig().entities.behavior.cooldownFailedBeehiveReleases) {
+                else if (!i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled && level.paperConfig().entities.behavior.cooldownFailedBeehiveReleases) { // Leaves - mc technical survival mode
                     beeData.exitTickCounter = beeData.occupant.minTicksInHive / 2;
                 }
                 // Paper end - Fix bees aging inside; use exitTickCounter to keep actual bee life
diff --git a/net/minecraft/world/level/block/entity/HopperBlockEntity.java b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
index aca3303a043144894ae20ddc43abc55790db44ad..c18559390d22391b83478abfd32d1f316321c5b9 100644
--- a/net/minecraft/world/level/block/entity/HopperBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/HopperBlockEntity.java
@@ -52,6 +52,7 @@ import org.leavesmc.leaves.lithium.common.tracking.entity.ChunkSectionEntityMove
 import org.leavesmc.leaves.lithium.common.tracking.entity.ChunkSectionInventoryEntityTracker;
 import org.leavesmc.leaves.lithium.common.tracking.entity.ChunkSectionItemEntityMovementTracker;
 // Leaves end - Lithium Sleeping Block Entity
+import i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig; // Shiroha - Imports
 
 public class HopperBlockEntity extends RandomizableContainerBlockEntity implements Hopper, SleepingBlockEntity, ChunkSectionEntityMovementListener, LithiumInventory, InventoryChangeListener, UpdateReceiver, InventoryChangeTracker { // Leaves - Lithium Sleeping Block Entity
     public static final int MOVE_ITEM_SPEED = 8;
@@ -304,7 +305,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
                 origItemStack.setCount(originalItemCount);
             }
         }
-        if (foundItem && level.paperConfig().hopper.cooldownWhenFull) { // Inventory was full - cooldown
+        if (foundItem && level.paperConfig().hopper.cooldownWhenFull && !i.moniasuki.shiroha.config.vanilla.MCTechnicalSurvivalModeConfig.enabled) { // Inventory was full - cooldown // Leaves - mc technical survival mode
             hopper.setCooldown(level.spigotConfig.hopperTransfer);
         }
         return false;
@@ -346,7 +347,7 @@ public class HopperBlockEntity extends RandomizableContainerBlockEntity implemen
         }
         origItemStack.setCount(originalItemCount);
 
-        if (level.paperConfig().hopper.cooldownWhenFull) {
+        if (level.paperConfig().hopper.cooldownWhenFull && !MCTechnicalSurvivalModeConfig.enabled) { // Leaves - mc technical survival mode
             applyCooldown(hopper);
         }
 
